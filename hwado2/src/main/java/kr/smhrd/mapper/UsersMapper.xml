<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.smhrd.mapper.UsersMapper">
	
	
<insert id="usersInsert" parameterType="kr.smhrd.entity.Users">
	INSERT INTO USERS (user_email, user_pw, user_name, user_nick, user_birthdate)
	VALUES (#{user_email}, MD5(#{user_pw}), #{user_name}, #{user_nick}, #{user_birthdate})
</insert>

<select id="emailCheck" resultType="kr.smhrd.entity.Users">
	SELECT * FROM USERS WHERE user_email = #{user_email}
</select>

<select id="userSelect" parameterType="kr.smhrd.entity.Users" resultType="kr.smhrd.entity.Users">
    SELECT * FROM USERS WHERE user_email = #{user_email} AND user_pw = MD5(#{user_pw})
</select>

<select id="getWish" parameterType="String" resultType="kr.smhrd.entity.WISHLIST">
select * from WISHLIST where user_email = #{user_email}
</select>

<select id="user_management" resultType="kr.smhrd.entity.Users">
		select * from USERS where not(user_email='admin')
	</select>
	
	<update id="stopUser" parameterType="String">
		UPDATE USERS SET user_role = "3" WHERE user_email=#{email}
	</update>
	
	<update id="unfreezeUser" parameterType="String">
		UPDATE USERS SET user_role = "1" WHERE user_email=#{email}
	</update>


<delete id="approvalPf" parameterType="String">
	delete from PORTFOLIOS where user_email=#{email}
</delete>

<delete id="refusePf" parameterType="String">
	delete from PORTFOLIOS where user_email=#{email}
</delete>

<update id="updateArtist" parameterType="String">
	update USERS set user_role = "2" where user_email=#{email}
</update>

<select id="searchByQuery" resultType="kr.smhrd.entity.Users">
		select * from USERS where user_email=#{email}
	</select>

<select id="searchArtist" resultType="kr.smhrd.entity.Users">
		SELECT USERS.* FROM USERS JOIN ARTWORKS ON  USERS.user_email = ARTWORKS.user_email  WHERE LOWER(ARTWORKS.aw_name) LIKE CONCAT('%' , #{searchAw} , '%') or LOWER(USERS.user_nick) LIKE CONCAT('%' , #{searchAw} , '%')
	</select>


 <insert id="regiPortfolio" parameterType="kr.smhrd.entity.Portfolios">
        INSERT INTO  PORTFOLIOS (user_email, pf_title, pf_file1, pf_file2, pf_file3, pf_desc)
        VALUES (#{user_email}, #{pf_title}, #{pf_file1}, #{pf_file2}, #{pf_file3}, #{pf_desc})
</insert>

<select id="purchase_history" resultType="kr.smhrd.entity.ArtworkImage">
	SELECT 
    ARTWORKS.aw_name,
    IMAGES.img_filename,
    USERS.user_nick,
    ORDERS.delivery_at,
    ORDERS.pay_amount,
    ORDERS.delivery_status
	FROM ORDERS
	JOIN USERS ON ORDERS.user_email = USERS.user_email
	JOIN BASKETS ON ORDERS.basket_seq = BASKETS.basket_seq
	JOIN ARTWORKS ON BASKETS.aw_seq = ARTWORKS.aw_seq
	JOIN IMAGES ON ARTWORKS.aw_seq = IMAGES.aw_seq
	WHERE ORDERS.user_email = #{user.email}
	AND IMAGES.img_type = "0";
</select>
	
<select id="Author_page" resultType="kr.smhrd.entity.ArtworkImage">
SELECT u.user_nick
FROM USERS u
JOIN ARTIST_PROFILE ap ON u.user_email = ap.user_email where ap.ap_type = '0'
</select>

<select id="getWishArtist" parameterType="String" resultType="kr.smhrd.entity.Interests">
select * from INTERESTS where user_email = #{user_email}
</select>

<update id="updateUser" parameterType="kr.smhrd.entity.Users">
    UPDATE USERS SET user_nick = #{user_nick}, user_pw = MD5(#{user_pw})
    WHERE user_email=#{user_email}
</update>

<select id="exhibition" parameterType="String" resultType="kr.smhrd.entity.ArtworkImage">
    SELECT 
        ap.ap_title,
        ap.ap_desc,
        ap.ap_type,
        ap.aw_title,
        u.user_nick
    FROM ARTIST_PROFILE ap
    JOIN USERS u ON ap.user_email = u.user_email
    WHERE ap.ap_type = 1
    AND ap.user_email = #{userEmail}
</select>
</mapper>